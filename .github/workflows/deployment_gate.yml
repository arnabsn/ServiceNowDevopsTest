name: Deployment Gates workflow
on: workflow_dispatch


jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
          
      - name: Cache SonarCloud Scanner
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: sonar-${{ runner.os }}-${{ github.sha }}
          restore-keys: sonar-${{ runner.os }}

      - name: Run SonarCloud Scan
        run: |
          pip install sonar-scanner-cli
          sonar-scanner -Dsonar.organization=test-org-arnab \
                        -Dsonar.projectKey=test-org-arnab_test-project \
                        -Dsonar.host.url=https://sonarcloud.io \
                        -Dsonar.login=${{ secrets.SONAR_TOKEN }}
        
      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=test-org-arnab_test-project
  # build:
  #   name: 'Build'
  #   runs-on: ubuntu-latest 

  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Set up JDK 11
  #     uses: actions/setup-java@v3
  #     with:
  #       java-version: '11'
  #       distribution: 'temurin'
  #       cache: maven
  #   - name: Build with Maven
  #     run: mvn clean compile

  # change:
  #   name: Change Request
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:     
  #     - name: ServiceNow DevOps Change Attributes
  #       uses: ServiceNow/servicenow-devops-change@v4.1.0
  #       with:
  #         # devops-integration-user-name: ${{ secrets.SN_DEVOPS_USER }}
  #         # devops-integration-user-password: ${{ secrets.SN_DEVOPS_PASSWORD }}
  #         devops-integration-token: ${{ secrets.SN_DEVOPS_TOKEN_2 }}
  #         instance-url: ${{ secrets.SN_INSTANCE_URL }}
  #         tool-id: ${{ secrets.SN_DEVOPS_TOOL_2 }}
  #         context-github: ${{ toJSON(github) }}
  #         job-name: 'Change Request'
  #         change-request: '{"autoCloseChange":true,"attributes":{"chg_model": {"name": "Normal" },"short_description":"Automated Software Deployments","description":"Automated Software Deployment.","assignment_group":"a715cd759f2002002920bde8132e7018","implementation_plan":"Software update is tested and results can be found in Test Summaries Tab.","backout_plan":"When software fails in production, the previous software release will be re-deployed.","test_plan":"Testing if the software was successfully deployed."}}'  
  #         interval: '100'
  #         timeout: '3600'
  #        # deployment-gate: '{"environment":"dev","jobId":"deploy","jobName":"Deploy"}'
  #        # setCloseCode":"true"
  
  # deployrename:
  #   name: Deploy
  #   needs: build
  #   runs-on: ubuntu-latest
  #   environment: dev
  #   steps:
  #     - name: Run deployment scripts
  #       run: echo Completed Deployment.
